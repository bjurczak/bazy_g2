LAB 5
ZAD1:
a).
create table kreatura select * from wikingowie.kreatura;
create table zasob select * from wikingowie.zasob;
create table ekwipunek select * from wikingowie.ekwipunek;
b).select * from zasob;
d).select idZasobu, ilosc from ekwipunek where idKreatury=3 or idKreatury=1 or idKreatury=5;
albo  select idZasobu, ilosc from ekwipunek where idKreatury IN(1,3,5);

ZAD 2:
a) select * from kreatura where rodzaj !='wiedzma' and udzwig >=50;
b)select * from zasob where waga between 2 and 5;
c)select * from kreatura where nazwa like '%or%' and udzwig between 30 and 70;

ZAD 3:
a)select * from zasob where month(dataPozyskania) IN ('07','08');
b)select * from zasob where rodzaj IS NOT NULL order by waga asc;
c) select * from Kreatura order by dataUr asc limit 5;

ZAD 4:
a)select distinct rodzaj from zasob;
b)select concat(nazwa, " - ",  rodzaj) from kreatura where rodzaj like 'wi%';
c)select nazwa, ilosc*waga as waga_calkowita from zasob where year(dataPozyskania) between 2000 and 2007 ;

ZAD 5:
a)select nazwa,ilosc*waga*0.7 as 'masa wlasciwa',ilosc*waga*0.3 as 'odpady' from zasob ;
b)select nazwa from zasob where rodzaj is null;
c)select distinct rodzaj,nazwa from zasob where nazwa like '&os' or nazwa like 'os&' order by nazwa asc;

LAB 6:
ZAD 1:
a)select avg(waga) from kreatura where rodzaj='wiking';
b)select rodzaj, avg(waga) as 'sredniaWaga', count(nazwa) as 'liczbaKreatur' from kreatura group by rodzaj
c)select rodzaj,avg(year(current_timestamp)-year(dataUr)) as 'sredni wiek' from kreatura group by rodzaj ;

ZAD 2:
a)select rodzaj, sum(waga*ilosc) from zasob group by rodzaj;
b)select nazwa, avg(waga) from zasob group by nazwa having avg(waga)>10 and sum(ilosc)>=4;
c)select rodzaj,count(distinct(nazwa)), from zasob group by rodzaj having sum(ilosc)>1;
ZAD 3:
a) select k.nazwa, sum(e.ilosc) from kreatura as k INNER JOIN ekwipunek e ON k.idKreatury=e.idKreatury group by k.nazwa;
ALBO TO
 select k.nazwa, e.idZasobu, e.ilosc from kreatura k,ekwipunek e where k.idKreatury=e.idKreatury;
b) 
c)SELECT k.nazwa FROM kreatura k
LEFT JOIN ekwipunek e
ON k.idKreatury=e.idKreatury
WHERE e.idKreatury IS NULL;
lub
SELECT idKreatury FROM kreatura WHERE idKreatury
NOT IN (SELECT idKreatury FROM ekwipunek
WHERE idKreatury IS NOT NULL);

ZAD 4:
a)SELECT k.nazwa, z.nazwa FROM kreatura as k, ekwipunek as e, zasob as z WHERE k.idKreatury=e.idKreatury and e.idZasobu=z.idZasobu AND k.rodzaj='wiking' AND k.dataUr BETWEEN '1670-01-01' AND '1679-12-31';
b) SELECT k.nazwa FROM kreatura AS k, ekwipunek AS e, zasob AS z WHERE k.idKreatury=e.idKreatury AND e.idZasobu=z.idZasobu AND z.rodzaj='jedzenie' ORDER BY k.dataUr DESC LIMIT 5;
c) select concat(k.nazwa,' - ',k2.nazwa) from kreatura as k, kreatura as k2 where k2.idKreatury=k.idkreatury+5;

ZAD 5:
a)select k.rodzaj, avg(e.ilosc*z.waga) as srednia
from kreatura as k inner join ekwipunek as e
inner join zasob as z on k.idKreatury=e.idKreatury
and e.idZasobu=z.idZasobu where k.rodzaj
NOT IN('malpa', 'waz')
group by k.rodzaj having sum(e.ilosc)<30;
b)select a.nazwa, a.rodzaj, a.dataUr from kreatura a, (SELECT min(dataUr) min, max(dataUr) max
from kreatura group by rodzaj) b WHERE b.min = a.dataUr OR b.max=a.dataUr;
----------------------------------------------------------------------------------------------------
LAB7
ZAD1:
a)create table etapy_wyprawy select * from wikingowie.etapy_wyprawy;
create table uczestnicy select * from wikingowie.uczestnicy;
create table sektor select * from wikingowie.sektor;
create table wyprawa select * from wikingowie.wyprawa;
b) select k.nazwa, u.id_uczestnika 
FROM kreatura as k 
LEFT JOIN uczestnicy as u 
ON k.idKreatury=u.id_uczestnika where u.id_uczestnika is NULL;
c)SELECT w.nazwa, SUM(e.ilosc) 
FROM kreatura as k, wyprawa as w, uczestnicy as u, ekwipunek as e 
WHERE k.idKreatury=e.idKreatury AND k.idKreatury=u.id_uczestnika AND u.id_wyprawy=w.id_wyprawy GROUP BY w.nazwa;
ZAD2:
a)SELECT rodzaj,group_concat(nazwa SEPARATOR '\n')
FROM kreatura
GROUP BY rodzaj;
b)SELECT w.nazwa,COUNT(u.id_uczestnika), GROUP_CONCAT(k.nazwa SEPARATOR ' ')
FROM wyprawa AS w, uczestnicy AS u, kreatura AS k
WHERE w.id_wyprawy=u.id_wyprawy AND u.id_uczestnika=k.idKreatury
GROUP BY w.nazwa;
c)SELECT et.idEtapu, s.nazwa, w.kierownik 
FROM etapy_wyprawy et, wyprawa w, sektor s 
WHERE et.idWyprawy = w.id_wyprawy
AND et.sektor = s.id_sektora ORDER BY w.data_rozpoczecia, et.kolejnosc;
ZAD3:
a)select id_sektora,count(idEtapu) as odwiedzony
 from sektor s left join etapy_wyprawy e on e.sektor=s.id_sektora group by id_sektora ;
b)select nazwa,if(count(id_uczestnika)>0,"bral udzial w wyprawie","nie bral udzialu w wyprawie")
 from kreatura left join uczestnicy on idKreatury=id_uczestnika group by nazwa ;
ZAD4:
a)select nazwa, length(udzwig) from kreatura;
b)SELECT w.nazwa, et.dziennik, length(et.dziennik)
FROM wyprawa AS w
INNER JOIN etapy_wyprawy AS et ON w.id_wyprawy=et.idWyprawy;
c)SELECT w.nazwa, SUM(LENGTH(e.dziennik)) AS dlugosc 
FROM wyprawa AS w, etapy_wyprawy AS e 
WHERE e.idWyprawy=w.id_wyprawy GROUP BY w.nazwa HAVING dlugosc<400

ZAD
a)DELIMITER //
CREATE TRIGGER kreatura_before_insert
BEFORE INSERT ON kreatura
FOR EACH ROW
BEGIN
IF NEW.waga < 0
THEN
SET NEW.waga = 0;
END IF;
END
//
DELIMITER ;

b) DELIMITER //
CREATE TRIGGER wyprawa_after_delete
AFTER DELETE ON wyprawa
FOR EACH ROW
BEGIN
INSERT INTO archiwum_wypraw SELECT w.id_wyprawy, w.nazwa, w.data_rozpoczecia,
w.data_zakonczenia, k.nazwa
from wyprawa w, kreatura k
WHERE w.kierownik=k.idKreatury
AND w.id_wyprawy=OLD.id_wyprawy;
INSERT INTO archiwum_wypraw VALUES(OLD.id_wyprawy, OLD.nazwa, OLD.data_rozpoczecia,
OLD.data_zakonczenia, (SELECT k.nazwa from kreatura where k.idKreatury=OLD.kierownik));
END
//
DELIMITER ;








